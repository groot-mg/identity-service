import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id "com.gorylenko.gradle-git-properties" version '2.4.1'
    id 'pl.allegro.tech.build.axion-release' version '1.14.0'
    id 'io.freefair.lombok'
    id 'java'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
scmVersion {
    tag { prefix = rootProject.name + '-' }
    versionIncrementer 'incrementMinor'
}
project.version = scmVersion.version

def commonJarConfigClosure = {
    archiveName = "${rootProject.name}.jar"
}

bootJar commonJarConfigClosure

springBoot {
    buildInfo {
        properties {
            name = rootProject.name
            version = project.version
            additional = [
                    host           : InetAddress.localHost.hostName,
                    hostAddress    : InetAddress.localHost.getHostAddress(),
                    operatingSystem: DefaultNativePlatform.currentOperatingSystem.getInternalOs().toString()
            ]
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.keycloak:keycloak-admin-client:19.0.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.10'

    implementation 'io.micrometer:micrometer-registry-prometheus'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}